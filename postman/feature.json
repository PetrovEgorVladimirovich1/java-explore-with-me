{
	"info": {
		"_postman_id": "946e6924-8b89-4967-9d5d-58274301b4dc",
		"name": "Комментарии",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "30063909"
	},
	"item": [
		{
			"name": "Создание основы для создания комментария.",
			"item": [
				{
					"name": "Добавление пользователя 1.",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 201\", function () {\r",
									"    pm.expect(pm.response.code).to.be.oneOf([201]);\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"email\": \"user@user.com\",\r\n    \"name\": \"Пользователь 1.\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:8080/admin/users",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"admin",
								"users"
							]
						}
					},
					"response": []
				},
				{
					"name": "Добавление категории 1.",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 201\", function () {\r",
									"    pm.expect(pm.response.code).to.be.oneOf([201]);\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"name\": \"Категория 1.\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:8080/admin/categories",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"admin",
								"categories"
							]
						}
					},
					"response": []
				},
				{
					"name": "Добавление события 1.",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"var moment = require('moment');\r",
									"\r",
									"var eventDate = moment().add(1, 's');\r",
									"eventDate.add(3, 'hour');\r",
									"pm.environment.set('eventDate', eventDate.format('YYYY-MM-DD HH:mm:ss'));"
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 201\", function () {\r",
									"    pm.expect(pm.response.code).to.be.oneOf([201]);\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"annotation\": \"12345678901234567890\",\r\n    \"category\": 1,\r\n    \"description\": \"12345678901234567890\",\r\n    \"eventDate\": \"{{eventDate}}\",\r\n    \"location\": {\r\n        \"lat\": 23.123,\r\n        \"lon\": 123.123\r\n    },\r\n    \"title\": \"Событие 1.\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:8080/users/:userId/events",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"users",
								":userId",
								"events"
							],
							"variable": [
								{
									"key": "userId",
									"value": "1"
								}
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "POST",
			"item": [
				{
					"name": "201",
					"item": [
						{
							"name": "Добавление комментария 1.",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 201\", function () {\r",
											"    pm.expect(pm.response.code).to.be.oneOf([201]);\r",
											"});\r",
											"pm.test(\"Добавление комментария.\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.id, '\"id\" field').to.eql(1);\r",
											"    pm.expect(jsonData.text, '\"text\" field').to.eql(\"Комментарий 1.\");\r",
											"    pm.expect(jsonData.authorName, '\"authorName\" field').to.eql(\"Пользователь 1.\");\r",
											"    pm.expect(jsonData.eventTitle, '\"eventTitle\" field').to.eql(\"Событие 1.\");\r",
											"    pm.expect(jsonData.createdOn, '\"createdOn\" field').not.null;\r",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"text\": \"Комментарий 1.\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://localhost:8080/users/:userId/events/:eventId/comments",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "8080",
									"path": [
										"users",
										":userId",
										"events",
										":eventId",
										"comments"
									],
									"variable": [
										{
											"key": "userId",
											"value": "136"
										},
										{
											"key": "eventId",
											"value": "104"
										}
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "400",
					"item": [
						{
							"name": "Ошибка 400. userId null.",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 400\", function () {\r",
											"    pm.expect(pm.response.code).to.be.oneOf([400]);\r",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"text\": \"Комментарий 1.\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://localhost:8080/users/:userId/events/:eventId/comments",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "8080",
									"path": [
										"users",
										":userId",
										"events",
										":eventId",
										"comments"
									],
									"variable": [
										{
											"key": "userId",
											"value": ""
										},
										{
											"key": "eventId",
											"value": "104"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Ошибка 400. eventId null.",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 400\", function () {\r",
											"    pm.expect(pm.response.code).to.be.oneOf([400]);\r",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"text\": \"Комментарий 1.\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://localhost:8080/users/:userId/events/:eventId/comments",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "8080",
									"path": [
										"users",
										":userId",
										"events",
										":eventId",
										"comments"
									],
									"variable": [
										{
											"key": "userId",
											"value": "136"
										},
										{
											"key": "eventId",
											"value": ""
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Ошибка 400. userId отрицательный.",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 400\", function () {\r",
											"    pm.expect(pm.response.code).to.be.oneOf([400]);\r",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"text\": \"Комментарий 1.\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://localhost:8080/users/:userId/events/:eventId/comments",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "8080",
									"path": [
										"users",
										":userId",
										"events",
										":eventId",
										"comments"
									],
									"variable": [
										{
											"key": "userId",
											"value": "-1"
										},
										{
											"key": "eventId",
											"value": "104"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Ошибка 400. eventId отрицательный.",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 400\", function () {\r",
											"    pm.expect(pm.response.code).to.be.oneOf([400]);\r",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"text\": \"Комментарий 1.\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://localhost:8080/users/:userId/events/:eventId/comments",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "8080",
									"path": [
										"users",
										":userId",
										"events",
										":eventId",
										"comments"
									],
									"variable": [
										{
											"key": "userId",
											"value": "136"
										},
										{
											"key": "eventId",
											"value": "-1"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Ошибка 400. text < 5.",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 400\", function () {\r",
											"    pm.expect(pm.response.code).to.be.oneOf([400]);\r",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"text\": \"1234\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://localhost:8080/users/:userId/events/:eventId/comments",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "8080",
									"path": [
										"users",
										":userId",
										"events",
										":eventId",
										"comments"
									],
									"variable": [
										{
											"key": "userId",
											"value": "136"
										},
										{
											"key": "eventId",
											"value": "104"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Ошибка 400. text > 255.",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 400\", function () {\r",
											"    pm.expect(pm.response.code).to.be.oneOf([400]);\r",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"text\": \"1234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://localhost:8080/users/:userId/events/:eventId/comments",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "8080",
									"path": [
										"users",
										":userId",
										"events",
										":eventId",
										"comments"
									],
									"variable": [
										{
											"key": "userId",
											"value": "136"
										},
										{
											"key": "eventId",
											"value": "104"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Ошибка 400. text пустой(с пробелами).",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 400\", function () {\r",
											"    pm.expect(pm.response.code).to.be.oneOf([400]);\r",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"text\": \"           \"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://localhost:8080/users/:userId/events/:eventId/comments",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "8080",
									"path": [
										"users",
										":userId",
										"events",
										":eventId",
										"comments"
									],
									"variable": [
										{
											"key": "userId",
											"value": "136"
										},
										{
											"key": "eventId",
											"value": "104"
										}
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "404",
					"item": [
						{
							"name": "Ошибка 404. userId не существует.",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 404\", function () {\r",
											"    pm.expect(pm.response.code).to.be.oneOf([404]);\r",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"text\": \"Комментарий 1.\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://localhost:8080/users/:userId/events/:eventId/comments",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "8080",
									"path": [
										"users",
										":userId",
										"events",
										":eventId",
										"comments"
									],
									"variable": [
										{
											"key": "userId",
											"value": "999"
										},
										{
											"key": "eventId",
											"value": "104"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Ошибка 404. eventId не существует.",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 404\", function () {\r",
											"    pm.expect(pm.response.code).to.be.oneOf([404]);\r",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"text\": \"Комментарий 1.\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://localhost:8080/users/:userId/events/:eventId/comments",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "8080",
									"path": [
										"users",
										":userId",
										"events",
										":eventId",
										"comments"
									],
									"variable": [
										{
											"key": "userId",
											"value": "136"
										},
										{
											"key": "eventId",
											"value": "999"
										}
									]
								}
							},
							"response": []
						}
					]
				}
			]
		},
		{
			"name": "PATCH",
			"item": [
				{
					"name": "200",
					"item": [
						{
							"name": "Обновление комментария 1.",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.expect(pm.response.code).to.be.oneOf([200]);\r",
											"});\r",
											"pm.test(\"Обновление комментария.\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.id, '\"id\" field').to.eql(1);\r",
											"    pm.expect(jsonData.text, '\"text\" field').to.eql(\"Комментарий 1 обновлённый.\");\r",
											"    pm.expect(jsonData.authorName, '\"authorName\" field').to.eql(\"Пользователь 1.\");\r",
											"    pm.expect(jsonData.eventTitle, '\"eventTitle\" field').to.eql(\"Событие 1.\");\r",
											"    pm.expect(jsonData.createdOn, '\"createdOn\" field').not.null;\r",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "PATCH",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"text\": \"Комментарий 1 обновлённый.\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://localhost:8080/users/:userId/events/:eventId/comments/:commentId",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "8080",
									"path": [
										"users",
										":userId",
										"events",
										":eventId",
										"comments",
										":commentId"
									],
									"variable": [
										{
											"key": "userId",
											"value": "136"
										},
										{
											"key": "eventId",
											"value": "104"
										},
										{
											"key": "commentId",
											"value": "1"
										}
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "400",
					"item": [
						{
							"name": "Ошибка 400. userId null.",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 400\", function () {\r",
											"    pm.expect(pm.response.code).to.be.oneOf([400]);\r",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "PATCH",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"text\": \"Комментарий 1 обновлённый.\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://localhost:8080/users/:userId/events/:eventId/comments/:commentId",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "8080",
									"path": [
										"users",
										":userId",
										"events",
										":eventId",
										"comments",
										":commentId"
									],
									"variable": [
										{
											"key": "userId",
											"value": ""
										},
										{
											"key": "eventId",
											"value": "104"
										},
										{
											"key": "commentId",
											"value": "1"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Ошибка 400. eventId null.",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 400\", function () {\r",
											"    pm.expect(pm.response.code).to.be.oneOf([400]);\r",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "PATCH",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"text\": \"Комментарий 1 обновлённый.\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://localhost:8080/users/:userId/events/:eventId/comments/:commentId",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "8080",
									"path": [
										"users",
										":userId",
										"events",
										":eventId",
										"comments",
										":commentId"
									],
									"variable": [
										{
											"key": "userId",
											"value": "136"
										},
										{
											"key": "eventId",
											"value": ""
										},
										{
											"key": "commentId",
											"value": "1"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Ошибка 400. commentId null.",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 400\", function () {\r",
											"    pm.expect(pm.response.code).to.be.oneOf([400]);\r",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "PATCH",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"text\": \"Комментарий 1 обновлённый.\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://localhost:8080/users/:userId/events/:eventId/comments/:commentId",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "8080",
									"path": [
										"users",
										":userId",
										"events",
										":eventId",
										"comments",
										":commentId"
									],
									"variable": [
										{
											"key": "userId",
											"value": "136"
										},
										{
											"key": "eventId",
											"value": "104"
										},
										{
											"key": "commentId",
											"value": ""
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Ошибка 400. userId отрицательное.",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 400\", function () {\r",
											"    pm.expect(pm.response.code).to.be.oneOf([400]);\r",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "PATCH",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"text\": \"Комментарий 1 обновлённый.\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://localhost:8080/users/:userId/events/:eventId/comments/:commentId",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "8080",
									"path": [
										"users",
										":userId",
										"events",
										":eventId",
										"comments",
										":commentId"
									],
									"variable": [
										{
											"key": "userId",
											"value": "-1"
										},
										{
											"key": "eventId",
											"value": "104"
										},
										{
											"key": "commentId",
											"value": "1"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Ошибка 400. eventId отрицательное.",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 400\", function () {\r",
											"    pm.expect(pm.response.code).to.be.oneOf([400]);\r",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "PATCH",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"text\": \"Комментарий 1 обновлённый.\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://localhost:8080/users/:userId/events/:eventId/comments/:commentId",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "8080",
									"path": [
										"users",
										":userId",
										"events",
										":eventId",
										"comments",
										":commentId"
									],
									"variable": [
										{
											"key": "userId",
											"value": "136"
										},
										{
											"key": "eventId",
											"value": "-1"
										},
										{
											"key": "commentId",
											"value": "1"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Ошибка 400. commentId отрицательное.",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 400\", function () {\r",
											"    pm.expect(pm.response.code).to.be.oneOf([400]);\r",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "PATCH",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"text\": \"Комментарий 1 обновлённый.\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://localhost:8080/users/:userId/events/:eventId/comments/:commentId",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "8080",
									"path": [
										"users",
										":userId",
										"events",
										":eventId",
										"comments",
										":commentId"
									],
									"variable": [
										{
											"key": "userId",
											"value": "136"
										},
										{
											"key": "eventId",
											"value": "104"
										},
										{
											"key": "commentId",
											"value": "-1"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Ошибка 400. text < 5.",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 400\", function () {\r",
											"    pm.expect(pm.response.code).to.be.oneOf([400]);\r",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "PATCH",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"text\": \"1234\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://localhost:8080/users/:userId/events/:eventId/comments/:commentId",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "8080",
									"path": [
										"users",
										":userId",
										"events",
										":eventId",
										"comments",
										":commentId"
									],
									"variable": [
										{
											"key": "userId",
											"value": "136"
										},
										{
											"key": "eventId",
											"value": "104"
										},
										{
											"key": "commentId",
											"value": "1"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Ошибка 400. text > 255.",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 400\", function () {\r",
											"    pm.expect(pm.response.code).to.be.oneOf([400]);\r",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "PATCH",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"text\": \"1234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://localhost:8080/users/:userId/events/:eventId/comments/:commentId",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "8080",
									"path": [
										"users",
										":userId",
										"events",
										":eventId",
										"comments",
										":commentId"
									],
									"variable": [
										{
											"key": "userId",
											"value": "136"
										},
										{
											"key": "eventId",
											"value": "104"
										},
										{
											"key": "commentId",
											"value": "1"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Ошибка 400. text пустой(с пробелами).",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 400\", function () {\r",
											"    pm.expect(pm.response.code).to.be.oneOf([400]);\r",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "PATCH",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"text\": \"           \"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://localhost:8080/users/:userId/events/:eventId/comments/:commentId",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "8080",
									"path": [
										"users",
										":userId",
										"events",
										":eventId",
										"comments",
										":commentId"
									],
									"variable": [
										{
											"key": "userId",
											"value": "136"
										},
										{
											"key": "eventId",
											"value": "104"
										},
										{
											"key": "commentId",
											"value": "1"
										}
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "404",
					"item": [
						{
							"name": "Ошибка 404. userId не существует.",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 404\", function () {\r",
											"    pm.expect(pm.response.code).to.be.oneOf([404]);\r",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "PATCH",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"text\": \"Комментарий 1 обновлённый.\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://localhost:8080/users/:userId/events/:eventId/comments/:commentId",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "8080",
									"path": [
										"users",
										":userId",
										"events",
										":eventId",
										"comments",
										":commentId"
									],
									"variable": [
										{
											"key": "userId",
											"value": "999"
										},
										{
											"key": "eventId",
											"value": "104"
										},
										{
											"key": "commentId",
											"value": "1"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Ошибка 404. eventId не существует.",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 404\", function () {\r",
											"    pm.expect(pm.response.code).to.be.oneOf([404]);\r",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "PATCH",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"text\": \"Комментарий 1 обновлённый.\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://localhost:8080/users/:userId/events/:eventId/comments/:commentId",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "8080",
									"path": [
										"users",
										":userId",
										"events",
										":eventId",
										"comments",
										":commentId"
									],
									"variable": [
										{
											"key": "userId",
											"value": "136"
										},
										{
											"key": "eventId",
											"value": "999"
										},
										{
											"key": "commentId",
											"value": "1"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Ошибка 404. commentId не существует.",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 404\", function () {\r",
											"    pm.expect(pm.response.code).to.be.oneOf([404]);\r",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "PATCH",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"text\": \"Комментарий 1 обновлённый.\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://localhost:8080/users/:userId/events/:eventId/comments/:commentId",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "8080",
									"path": [
										"users",
										":userId",
										"events",
										":eventId",
										"comments",
										":commentId"
									],
									"variable": [
										{
											"key": "userId",
											"value": "136"
										},
										{
											"key": "eventId",
											"value": "104"
										},
										{
											"key": "commentId",
											"value": "999"
										}
									]
								}
							},
							"response": []
						}
					]
				}
			]
		},
		{
			"name": "GET",
			"item": [
				{
					"name": "Private",
					"item": [
						{
							"name": "200",
							"item": [
								{
									"name": "Получение списка комментариев от конкретного пользователя к событию.",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 200\", function () {\r",
													"    pm.response.to.be.ok;\r",
													"});\r",
													"pm.test(\"Получение списка комментариев от конкретного пользователя к событию.\", function () {\r",
													"    pm.response.to.be.withBody;\r",
													"    pm.response.to.be.json;\r",
													"    var jsonData = pm.response.json();\r",
													"    pm.expect(jsonData.length, 'List length must be 1').to.eql(1);\r",
													"});\r",
													"\r",
													"pm.test(\"Test comment[0] 'id' field\", function () {\r",
													"    var jsonData = pm.response.json();\r",
													"    pm.expect(jsonData[0]).to.have.property('id');\r",
													"    pm.expect(jsonData[0].id, '\"id\" must be 1').to.eql(1);\r",
													"});\r",
													"pm.test(\"Test comment[0] 'text' field\", function () {\r",
													"    var jsonData = pm.response.json();\r",
													"    pm.expect(jsonData[0]).to.have.property('text');\r",
													"    pm.expect(jsonData[0].text, '\"text\" must be \"Комментарий 1 обновлённый.\"').to.eql('Комментарий 1 обновлённый.');\r",
													"});\r",
													"pm.test(\"Test comment[0] 'authorName' field\", function () {\r",
													"    var jsonData = pm.response.json();\r",
													"    pm.expect(jsonData[0]).to.have.property('authorName');\r",
													"    pm.expect(jsonData[0].authorName, '\"authorName\" must be \"Пользователь 1.\"').to.eql('Пользователь 1.');\r",
													"});\r",
													"pm.test(\"Test comment[0] 'eventTitle' field\", function () {\r",
													"    var jsonData = pm.response.json();\r",
													"    pm.expect(jsonData[0]).to.have.property('eventTitle');\r",
													"    pm.expect(jsonData[0].eventTitle, '\"eventTitle\" must be \"Событие 1.\"').to.eql('Событие 1.');\r",
													"});\r",
													"pm.test(\"Test comment[0] 'createdOn' field\", function () {\r",
													"    var jsonData = pm.response.json();\r",
													"    pm.expect(jsonData[0]).to.have.property('createdOn');\r",
													"    pm.expect(jsonData[0].createdOn, '\"createdOn\" must be \"not null\"').not.null;\r",
													"});"
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "http://localhost:8080/users/:userId/events/:eventId/comments",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"port": "8080",
											"path": [
												"users",
												":userId",
												"events",
												":eventId",
												"comments"
											],
											"variable": [
												{
													"key": "userId",
													"value": "136"
												},
												{
													"key": "eventId",
													"value": "104"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Получение пустого списка. userId не найден.",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 200\", function () {\r",
													"    pm.response.to.be.ok;\r",
													"});\r",
													"pm.test(\"Получение пустого списка. userId не найден.\", function () {\r",
													"    pm.response.to.be.withBody;\r",
													"    pm.response.to.be.json;\r",
													"    var jsonData = pm.response.json();\r",
													"    pm.expect(jsonData.length, 'List length must be 0').to.eql(0);\r",
													"});"
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "http://localhost:8080/users/:userId/events/:eventId/comments",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"port": "8080",
											"path": [
												"users",
												":userId",
												"events",
												":eventId",
												"comments"
											],
											"variable": [
												{
													"key": "userId",
													"value": "999"
												},
												{
													"key": "eventId",
													"value": "104"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Получение пустого списка. eventId не найден.",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 200\", function () {\r",
													"    pm.response.to.be.ok;\r",
													"});\r",
													"pm.test(\"Получение пустого списка. eventId не найден.\", function () {\r",
													"    pm.response.to.be.withBody;\r",
													"    pm.response.to.be.json;\r",
													"    var jsonData = pm.response.json();\r",
													"    pm.expect(jsonData.length, 'List length must be 0').to.eql(0);\r",
													"});"
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "http://localhost:8080/users/:userId/events/:eventId/comments",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"port": "8080",
											"path": [
												"users",
												":userId",
												"events",
												":eventId",
												"comments"
											],
											"variable": [
												{
													"key": "userId",
													"value": "136"
												},
												{
													"key": "eventId",
													"value": "999"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Получение списка всех комментариев конкретного пользователя.",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 200\", function () {\r",
													"    pm.response.to.be.ok;\r",
													"});\r",
													"pm.test(\"Получение списка всех комментариев конкретного пользователя.\", function () {\r",
													"    pm.response.to.be.withBody;\r",
													"    pm.response.to.be.json;\r",
													"    var jsonData = pm.response.json();\r",
													"    pm.expect(jsonData.length, 'List length must be 1').to.eql(1);\r",
													"});\r",
													"\r",
													"pm.test(\"Test comment[0] 'id' field\", function () {\r",
													"    var jsonData = pm.response.json();\r",
													"    pm.expect(jsonData[0]).to.have.property('id');\r",
													"    pm.expect(jsonData[0].id, '\"id\" must be 1').to.eql(1);\r",
													"});\r",
													"pm.test(\"Test comment[0] 'text' field\", function () {\r",
													"    var jsonData = pm.response.json();\r",
													"    pm.expect(jsonData[0]).to.have.property('text');\r",
													"    pm.expect(jsonData[0].text, '\"text\" must be \"Комментарий 1 обновлённый.\"').to.eql('Комментарий 1 обновлённый.');\r",
													"});\r",
													"pm.test(\"Test comment[0] 'authorName' field\", function () {\r",
													"    var jsonData = pm.response.json();\r",
													"    pm.expect(jsonData[0]).to.have.property('authorName');\r",
													"    pm.expect(jsonData[0].authorName, '\"authorName\" must be \"Пользователь 1.\"').to.eql('Пользователь 1.');\r",
													"});\r",
													"pm.test(\"Test comment[0] 'eventTitle' field\", function () {\r",
													"    var jsonData = pm.response.json();\r",
													"    pm.expect(jsonData[0]).to.have.property('eventTitle');\r",
													"    pm.expect(jsonData[0].eventTitle, '\"eventTitle\" must be \"Событие 1.\"').to.eql('Событие 1.');\r",
													"});\r",
													"pm.test(\"Test comment[0] 'createdOn' field\", function () {\r",
													"    var jsonData = pm.response.json();\r",
													"    pm.expect(jsonData[0]).to.have.property('createdOn');\r",
													"    pm.expect(jsonData[0].createdOn, '\"createdOn\" must be \"not null\"').not.null;\r",
													"});"
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "http://localhost:8080/users/:userId/comments",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"port": "8080",
											"path": [
												"users",
												":userId",
												"comments"
											],
											"variable": [
												{
													"key": "userId",
													"value": "136"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Получение пустого списка. userId не найден.",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 200\", function () {\r",
													"    pm.response.to.be.ok;\r",
													"});\r",
													"pm.test(\"Получение пустого списка. userId не найден.\", function () {\r",
													"    pm.response.to.be.withBody;\r",
													"    pm.response.to.be.json;\r",
													"    var jsonData = pm.response.json();\r",
													"    pm.expect(jsonData.length, 'List length must be 0').to.eql(0);\r",
													"});"
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "http://localhost:8080/users/:userId/comments",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"port": "8080",
											"path": [
												"users",
												":userId",
												"comments"
											],
											"variable": [
												{
													"key": "userId",
													"value": "999"
												}
											]
										}
									},
									"response": []
								}
							]
						},
						{
							"name": "400",
							"item": [
								{
									"name": "Ошибка 400. userId null.",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 400\", function () {\r",
													"    pm.response.to.be.badRequest;\r",
													"});"
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "http://localhost:8080/users/:userId/events/:eventId/comments",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"port": "8080",
											"path": [
												"users",
												":userId",
												"events",
												":eventId",
												"comments"
											],
											"variable": [
												{
													"key": "userId",
													"value": ""
												},
												{
													"key": "eventId",
													"value": "104"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Ошибка 400. eventId null.",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 400\", function () {\r",
													"    pm.response.to.be.badRequest;\r",
													"});"
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "http://localhost:8080/users/:userId/events/:eventId/comments",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"port": "8080",
											"path": [
												"users",
												":userId",
												"events",
												":eventId",
												"comments"
											],
											"variable": [
												{
													"key": "userId",
													"value": "136"
												},
												{
													"key": "eventId",
													"value": ""
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Ошибка 400. userId отрицательное.",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 400\", function () {\r",
													"    pm.response.to.be.badRequest;\r",
													"});"
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "http://localhost:8080/users/:userId/events/:eventId/comments",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"port": "8080",
											"path": [
												"users",
												":userId",
												"events",
												":eventId",
												"comments"
											],
											"variable": [
												{
													"key": "userId",
													"value": "-1"
												},
												{
													"key": "eventId",
													"value": "104"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Ошибка 400. eventId отрицательное.",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 400\", function () {\r",
													"    pm.response.to.be.badRequest;\r",
													"});"
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "http://localhost:8080/users/:userId/events/:eventId/comments",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"port": "8080",
											"path": [
												"users",
												":userId",
												"events",
												":eventId",
												"comments"
											],
											"variable": [
												{
													"key": "userId",
													"value": "136"
												},
												{
													"key": "eventId",
													"value": "-1"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Ошибка 400. userId null.",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 400\", function () {\r",
													"    pm.response.to.be.badRequest;\r",
													"});"
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "http://localhost:8080/users/:userId/comments",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"port": "8080",
											"path": [
												"users",
												":userId",
												"comments"
											],
											"variable": [
												{
													"key": "userId",
													"value": ""
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Ошибка 400. userId отрицательное.",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 400\", function () {\r",
													"    pm.response.to.be.badRequest;\r",
													"});"
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "http://localhost:8080/users/:userId/comments",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"port": "8080",
											"path": [
												"users",
												":userId",
												"comments"
											],
											"variable": [
												{
													"key": "userId",
													"value": "-1"
												}
											]
										}
									},
									"response": []
								}
							]
						}
					]
				},
				{
					"name": "Public",
					"item": [
						{
							"name": "200",
							"item": [
								{
									"name": "Получение списка комментариев к событию.",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 200\", function () {\r",
													"    pm.response.to.be.ok;\r",
													"});\r",
													"pm.test(\"Получение списка комментариев к событию.\", function () {\r",
													"    pm.response.to.be.withBody;\r",
													"    pm.response.to.be.json;\r",
													"    var jsonData = pm.response.json();\r",
													"    pm.expect(jsonData.length, 'List length must be 1').to.eql(1);\r",
													"});\r",
													"\r",
													"pm.test(\"Test comment[0] 'id' field\", function () {\r",
													"    var jsonData = pm.response.json();\r",
													"    pm.expect(jsonData[0]).to.have.property('id');\r",
													"    pm.expect(jsonData[0].id, '\"id\" must be 1').to.eql(1);\r",
													"});\r",
													"pm.test(\"Test comment[0] 'text' field\", function () {\r",
													"    var jsonData = pm.response.json();\r",
													"    pm.expect(jsonData[0]).to.have.property('text');\r",
													"    pm.expect(jsonData[0].text, '\"text\" must be \"Комментарий 1 обновлённый.\"').to.eql('Комментарий 1 обновлённый.');\r",
													"});\r",
													"pm.test(\"Test comment[0] 'authorName' field\", function () {\r",
													"    var jsonData = pm.response.json();\r",
													"    pm.expect(jsonData[0]).to.have.property('authorName');\r",
													"    pm.expect(jsonData[0].authorName, '\"authorName\" must be \"Пользователь 1.\"').to.eql('Пользователь 1.');\r",
													"});\r",
													"pm.test(\"Test comment[0] 'eventTitle' field\", function () {\r",
													"    var jsonData = pm.response.json();\r",
													"    pm.expect(jsonData[0]).to.have.property('eventTitle');\r",
													"    pm.expect(jsonData[0].eventTitle, '\"eventTitle\" must be \"Событие 1.\"').to.eql('Событие 1.');\r",
													"});\r",
													"pm.test(\"Test comment[0] 'createdOn' field\", function () {\r",
													"    var jsonData = pm.response.json();\r",
													"    pm.expect(jsonData[0]).to.have.property('createdOn');\r",
													"    pm.expect(jsonData[0].createdOn, '\"createdOn\" must be \"not null\"').not.null;\r",
													"});"
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "http://localhost:8080/events/:eventId/comments",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"port": "8080",
											"path": [
												"events",
												":eventId",
												"comments"
											],
											"variable": [
												{
													"key": "eventId",
													"value": "104"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Получение пустого списка. eventId не найден.",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 200\", function () {\r",
													"    pm.response.to.be.ok;\r",
													"});\r",
													"pm.test(\"Получение пустого списка. eventId не найден.\", function () {\r",
													"    pm.response.to.be.withBody;\r",
													"    pm.response.to.be.json;\r",
													"    var jsonData = pm.response.json();\r",
													"    pm.expect(jsonData.length, 'List length must be 0').to.eql(0);\r",
													"});"
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "http://localhost:8080/events/:eventId/comments",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"port": "8080",
											"path": [
												"events",
												":eventId",
												"comments"
											],
											"variable": [
												{
													"key": "eventId",
													"value": "999"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Получение конкретного комментария.",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 200\", function () {\r",
													"    pm.expect(pm.response.code).to.be.oneOf([200]);\r",
													"});\r",
													"pm.test(\"Получение конкретного комментария.\", function () {\r",
													"    var jsonData = pm.response.json();\r",
													"    pm.expect(jsonData.id, '\"id\" field').to.eql(1);\r",
													"    pm.expect(jsonData.text, '\"text\" field').to.eql(\"Комментарий 1 обновлённый.\");\r",
													"    pm.expect(jsonData.authorName, '\"authorName\" field').to.eql(\"Пользователь 1.\");\r",
													"    pm.expect(jsonData.eventTitle, '\"eventTitle\" field').to.eql(\"Событие 1.\");\r",
													"    pm.expect(jsonData.createdOn, '\"createdOn\" field').not.null;\r",
													"});"
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "http://localhost:8080/comments/:id",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"port": "8080",
											"path": [
												"comments",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "1"
												}
											]
										}
									},
									"response": []
								}
							]
						},
						{
							"name": "400",
							"item": [
								{
									"name": "Ошибка 400. eventId null.",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 400\", function () {\r",
													"    pm.response.to.be.badRequest;\r",
													"});"
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "http://localhost:8080/events/:eventId/comments",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"port": "8080",
											"path": [
												"events",
												":eventId",
												"comments"
											],
											"variable": [
												{
													"key": "eventId",
													"value": ""
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Ошибка 400. eventId отрицательное.",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 400\", function () {\r",
													"    pm.response.to.be.badRequest;\r",
													"});"
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "http://localhost:8080/events/:eventId/comments",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"port": "8080",
											"path": [
												"events",
												":eventId",
												"comments"
											],
											"variable": [
												{
													"key": "eventId",
													"value": "-1"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Ошибка 400. id null.",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 400\", function () {\r",
													"    pm.expect(pm.response.code).to.be.oneOf([400]);\r",
													"});"
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "http://localhost:8080/comments/:id",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"port": "8080",
											"path": [
												"comments",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": ""
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Ошибка 400. id отрицательное.",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 400\", function () {\r",
													"    pm.expect(pm.response.code).to.be.oneOf([400]);\r",
													"});"
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "http://localhost:8080/comments/:id",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"port": "8080",
											"path": [
												"comments",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "-1"
												}
											]
										}
									},
									"response": []
								}
							]
						},
						{
							"name": "404",
							"item": [
								{
									"name": "Ошибка 404. id не найден.",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 404\", function () {\r",
													"    pm.expect(pm.response.code).to.be.oneOf([404]);\r",
													"});"
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "http://localhost:8080/comments/:id",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"port": "8080",
											"path": [
												"comments",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "999"
												}
											]
										}
									},
									"response": []
								}
							]
						}
					]
				}
			]
		},
		{
			"name": "DELETE",
			"item": [
				{
					"name": "204",
					"item": [
						{
							"name": "Удаление комментария 1.",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 204\", function () {\r",
											"    pm.expect(pm.response.code).to.be.oneOf([204]);\r",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "http://localhost:8080/users/:userId/events/:eventId/comments/:commentId",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "8080",
									"path": [
										"users",
										":userId",
										"events",
										":eventId",
										"comments",
										":commentId"
									],
									"variable": [
										{
											"key": "userId",
											"value": "136"
										},
										{
											"key": "eventId",
											"value": "104"
										},
										{
											"key": "commentId",
											"value": "1"
										}
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "400",
					"item": [
						{
							"name": "Ошибка 400. userId null.",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 400\", function () {\r",
											"    pm.expect(pm.response.code).to.be.oneOf([400]);\r",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "http://localhost:8080/users/:userId/events/:eventId/comments/:commentId",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "8080",
									"path": [
										"users",
										":userId",
										"events",
										":eventId",
										"comments",
										":commentId"
									],
									"variable": [
										{
											"key": "userId",
											"value": ""
										},
										{
											"key": "eventId",
											"value": "104"
										},
										{
											"key": "commentId",
											"value": "1"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Ошибка 400. eventId null.",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 400\", function () {\r",
											"    pm.expect(pm.response.code).to.be.oneOf([400]);\r",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "DELETE",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"text\": \"Комментарий 1 обновлённый.\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://localhost:8080/users/:userId/events/:eventId/comments/:commentId",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "8080",
									"path": [
										"users",
										":userId",
										"events",
										":eventId",
										"comments",
										":commentId"
									],
									"variable": [
										{
											"key": "userId",
											"value": "136"
										},
										{
											"key": "eventId",
											"value": ""
										},
										{
											"key": "commentId",
											"value": "1"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Ошибка 400. commentId null.",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 400\", function () {\r",
											"    pm.expect(pm.response.code).to.be.oneOf([400]);\r",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "http://localhost:8080/users/:userId/events/:eventId/comments/:commentId",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "8080",
									"path": [
										"users",
										":userId",
										"events",
										":eventId",
										"comments",
										":commentId"
									],
									"variable": [
										{
											"key": "userId",
											"value": "136"
										},
										{
											"key": "eventId",
											"value": "104"
										},
										{
											"key": "commentId",
											"value": ""
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Ошибка 400. userId отрицательное.",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 400\", function () {\r",
											"    pm.expect(pm.response.code).to.be.oneOf([400]);\r",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "http://localhost:8080/users/:userId/events/:eventId/comments/:commentId",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "8080",
									"path": [
										"users",
										":userId",
										"events",
										":eventId",
										"comments",
										":commentId"
									],
									"variable": [
										{
											"key": "userId",
											"value": "-1"
										},
										{
											"key": "eventId",
											"value": "104"
										},
										{
											"key": "commentId",
											"value": "1"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Ошибка 400. eventId отрицательное.",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 400\", function () {\r",
											"    pm.expect(pm.response.code).to.be.oneOf([400]);\r",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "http://localhost:8080/users/:userId/events/:eventId/comments/:commentId",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "8080",
									"path": [
										"users",
										":userId",
										"events",
										":eventId",
										"comments",
										":commentId"
									],
									"variable": [
										{
											"key": "userId",
											"value": "136"
										},
										{
											"key": "eventId",
											"value": "-1"
										},
										{
											"key": "commentId",
											"value": "1"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Ошибка 400. commentId отрицательное.",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 400\", function () {\r",
											"    pm.expect(pm.response.code).to.be.oneOf([400]);\r",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "http://localhost:8080/users/:userId/events/:eventId/comments/:commentId",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "8080",
									"path": [
										"users",
										":userId",
										"events",
										":eventId",
										"comments",
										":commentId"
									],
									"variable": [
										{
											"key": "userId",
											"value": "136"
										},
										{
											"key": "eventId",
											"value": "104"
										},
										{
											"key": "commentId",
											"value": "-1"
										}
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "404",
					"item": [
						{
							"name": "Ошибка 404. userId не существует.",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 404\", function () {\r",
											"    pm.expect(pm.response.code).to.be.oneOf([404]);\r",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "http://localhost:8080/users/:userId/events/:eventId/comments/:commentId",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "8080",
									"path": [
										"users",
										":userId",
										"events",
										":eventId",
										"comments",
										":commentId"
									],
									"variable": [
										{
											"key": "userId",
											"value": "999"
										},
										{
											"key": "eventId",
											"value": "104"
										},
										{
											"key": "commentId",
											"value": "1"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Ошибка 404. eventId не существует.",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 404\", function () {\r",
											"    pm.expect(pm.response.code).to.be.oneOf([404]);\r",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "http://localhost:8080/users/:userId/events/:eventId/comments/:commentId",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "8080",
									"path": [
										"users",
										":userId",
										"events",
										":eventId",
										"comments",
										":commentId"
									],
									"variable": [
										{
											"key": "userId",
											"value": "136"
										},
										{
											"key": "eventId",
											"value": "999"
										},
										{
											"key": "commentId",
											"value": "1"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Ошибка 404. commentId не найден(был удалён).",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 404\", function () {\r",
											"    pm.expect(pm.response.code).to.be.oneOf([404]);\r",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "http://localhost:8080/users/:userId/events/:eventId/comments/:commentId",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "8080",
									"path": [
										"users",
										":userId",
										"events",
										":eventId",
										"comments",
										":commentId"
									],
									"variable": [
										{
											"key": "userId",
											"value": "136"
										},
										{
											"key": "eventId",
											"value": "104"
										},
										{
											"key": "commentId",
											"value": "1"
										}
									]
								}
							},
							"response": []
						}
					]
				}
			]
		}
	]
}